{"version":3,"sources":["components/SignIn.js"],"names":["SignIn","props","state","username","password","isLoggedIn","event","newState","Object","assign","this","target","id","value","setState","newLoginState","api","then","res","status","saveToken","data","token","setLoginState","console","log","to","className","md","span","offset","Body","Title","role","Text","Group","as","Col","Label","htmlFor","Control","type","onChange","formInputChange","variant","size","onClick","doLogin","React","Component"],"mappings":"sSAOqBA,E,kDACjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAEDC,MAAQ,CACTC,SAAU,GACVC,SAAU,GACVC,YAAY,GAND,E,mDAUnB,SAAgBC,GACZ,IAAMC,EAAWC,OAAOC,OAAOC,KAAKR,MAAnBM,OAAA,IAAAA,CAAA,GACZF,EAAMK,OAAOC,GAAKN,EAAMK,OAAOE,QAGpCH,KAAKI,SAASP,K,2BAGlB,SAAcF,GACV,IAAMU,EAAgBP,OAAOC,OAAOC,KAAKR,MAAO,CAC5CG,WAAYA,IAGhBK,KAAKI,SAASC,K,qBAGlB,WAAW,IAAD,OACNC,YAAI,cAAe,OAAQ,CACvBb,SAAUO,KAAKR,MAAMC,SACrBC,SAAUM,KAAKR,MAAME,WAExBa,MAAK,SAACC,GACgB,UAAfA,EAAIC,OAKW,OAAfD,EAAIC,SACJC,YAAU,UAAWF,EAAIG,KAAKC,OAE9B,EAAKC,eAAc,IAPnBC,QAAQC,IAAIP,EAAIG,W,oBAY5B,WAAU,IAAD,OACL,OAA8B,IAA1BX,KAAKR,MAAMG,WAEP,cAAC,IAAD,CAAUqB,GAAG,YAIjB,cAAC,IAAD,CAAQrB,WAAYK,KAAKR,MAAMG,WAA/B,SACI,sBAAKsB,UAAU,cAAf,UACA,uBACA,cAAC,IAAD,CAAKC,GAAI,CAACC,KAAM,EAAGC,OAAQ,GAA3B,SACI,eAAC,IAAKC,KAAN,WACI,eAAC,IAAKC,MAAN,WACA,8CACA,sBAAMC,KAAK,MAAM,aAAW,gBAA5B,+BAEA,cAAC,IAAKC,KAAN,UACI,eAAC,IAAD,WACI,eAAC,IAAKC,MAAN,CAAYC,GAAIC,IAAhB,UACI,cAAC,IAAKC,MAAN,CAAYC,QAAQ,WAApB,yBACA,cAAC,IAAKC,QAAN,CAAcC,KAAK,OAAO7B,GAAG,WACfC,MAAOH,KAAKR,MAAMC,SAClBuC,SAAU,SAAApC,GAAK,OAAI,EAAKqC,gBAAgBrC,SAE1D,eAAC,IAAK6B,MAAN,CAAYC,GAAIC,IAAhB,UACI,cAAC,IAAKC,MAAN,CAAYC,QAAQ,WAApB,yBACA,cAAC,IAAKC,QAAN,CAAcC,KAAK,WAAW7B,GAAG,WACnBC,MAAOH,KAAKR,MAAME,SAClBsC,SAAU,SAAApC,GAAK,OAAI,EAAKqC,gBAAgBrC,SAE1D,cAAC,IAAK6B,MAAN,UACI,cAAC,IAAD,CAAQS,QAAQ,OAAOC,KAAK,KACpBC,QAAW,kBAAM,EAAKC,WAD9B,2C,GA7EAC,IAAMC","file":"static/js/9.62107554.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, Form, Button, Col} from 'react-bootstrap';\r\nimport { Redirect } from 'react-router';\r\nimport api, { saveToken } from '../api/api.js';\r\nimport Layout from '../hoc/Layout/Layout';\r\nimport '../css/SignIn.css';\r\n\r\nexport default class SignIn extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            isLoggedIn: false,\r\n        }\r\n    }\r\n    \r\n    formInputChange(event) {\r\n        const newState = Object.assign(this.state, {\r\n            [event.target.id]: event.target.value\r\n        });\r\n\r\n        this.setState(newState);\r\n    }\r\n\r\n    setLoginState(isLoggedIn) {\r\n        const newLoginState = Object.assign(this.state, {\r\n            isLoggedIn: isLoggedIn,\r\n        });\r\n\r\n        this.setState(newLoginState);\r\n    }\r\n\r\n    doLogin() {\r\n        api(\"auth/signin\", \"post\", {\r\n            username: this.state.username,\r\n            password: this.state.password,\r\n        })\r\n        .then((res) => {\r\n            if (res.status === \"error\") {\r\n                console.log(res.data);\r\n                return;\r\n            }\r\n\r\n            if (res.status === \"ok\") {\r\n                saveToken(\"allowed\", res.data.token);\r\n\r\n                this.setLoginState(true);\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn === true) {\r\n            return(\r\n                <Redirect to=\"/quotes\" />\r\n            );\r\n        }\r\n        return(\r\n            <Layout isLoggedIn={this.state.isLoggedIn}>\r\n                <div className=\"signin-page\">\r\n                <br />\r\n                <Col md={{span: 6, offset: 3}}>\r\n                    <Card.Body>\r\n                        <Card.Title>\r\n                        <p>Sign in here!</p>\r\n                        <span role=\"img\" aria-label=\"pointing_down\"> ðŸ‘‡ </span>\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            <Form>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label htmlFor=\"username\"> Username: </Form.Label>\r\n                                    <Form.Control type=\"text\" id=\"username\"\r\n                                                  value={this.state.username}\r\n                                                  onChange={event => this.formInputChange(event)} />\r\n                                </Form.Group>\r\n                                <Form.Group as={Col}>\r\n                                    <Form.Label htmlFor=\"password\"> Password: </Form.Label>\r\n                                    <Form.Control type=\"password\" id=\"password\"\r\n                                                  value={this.state.password}\r\n                                                  onChange={event => this.formInputChange(event)} />\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button variant=\"dark\" size=\"sm\"\r\n                                            onClick= { () => this.doLogin() }> Jump in</Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Col>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}