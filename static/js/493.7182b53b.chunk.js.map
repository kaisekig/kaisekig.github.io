{"version":3,"file":"static/js/493.7182b53b.chunk.js","mappings":"mPAEe,SAASA,EAAIC,EAAMC,EAAQC,GAAuB,IAAjBC,EAAK,UAAD,6CAAC,UACjD,OAAO,IAAIC,SAAQ,SAACC,GAChB,IAAMC,EAAc,CAChBL,OAAQA,EACRM,IAAK,uCAAyCP,EAC9CQ,KAAMC,KAAKC,UAAUR,GACrBS,QAAS,CACL,eAAgB,mBAChB,cAAiBC,EAAST,KAIlCU,IAAMP,GACLQ,MAAK,SAAAC,GAAG,OAAIC,EAAgBD,EAAKV,EAAQ,IACzCY,MAAK,yCAAC,WAAMC,GAAG,gFAERA,EAAIC,UAAoC,MAAxBD,EAAIC,SAASC,OAAc,gBAKrB,OAJhBD,EAAW,CACbC,OAAQ,QACRZ,KAAM,MAEVa,QAAQC,IAAIH,GAAU,kBACfd,EAAQc,IAAS,OAQ5Bd,EALiB,CACbe,OAAQ,QACRZ,KAAMU,IAGQ,2CAErB,mDAlBK,GAmBV,GACJ,CAAC,SAEcF,EAAgB,EAAD,+CAiB7B,OAjB6B,0BAA9B,WAA+BD,EAAKV,GAAO,8EACtB,GAAjBgB,QAAQC,IAAIP,KACRA,EAAIK,OAAS,KAAOL,EAAIK,QAAU,KAAG,gBAInC,OAHID,EAAW,CACbC,OAAO,QACPZ,KAAMO,EAAIP,MACb,kBAEMH,EAAQc,IAAS,OAM1B,OAHIA,EAAW,CACbC,OAAQ,KACRZ,KAAMO,EAAIP,MACb,kBAEMH,EAAQc,IAAS,4CAC3B,sBAED,SAASP,EAAST,GAEd,MAAO,UADOoB,aAAaC,QAAQ,SAAWrB,EAElD,CAEO,SAASsB,EAAYtB,GAExB,QADcoB,aAAaC,QAAQ,SAAWrB,EAMlD,CAEO,SAASuB,EAAUvB,EAAMwB,GAC5BJ,aAAaK,QAAQ,SAAWzB,EAAMwB,EAC1C,CAEO,SAASE,EAAY1B,GACxBoB,aAAaO,WAAW,SAAW3B,EACvC,C,kFC5EA,SAAS4B,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GACvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAC3CC,IAAmBI,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,UACtD,KAAKP,EAAKQ,KAAKC,MAAMT,EAAMG,EAC7B,CACA,OAAOH,CACT,CACe,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIf,EAAQI,OAAOc,IAAS,GAAIC,SAAQ,SAAUC,IACpD,EAAAC,EAAA,GAAeP,EAAQM,EAAKF,EAAOE,GACrC,IAAKhB,OAAOkB,0BAA4BlB,OAAOmB,iBAAiBT,EAAQV,OAAOkB,0BAA0BJ,IAAWlB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GAC5JhB,OAAOiB,eAAeP,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,GAC7E,GACF,CACA,OAAON,CACT,CCbA,I,wJADMU,EAAa,GACVT,EAAI,EAAGA,EAAI,EAAGA,IACrBS,EAAWb,MACT,4BACE,UAACc,EAAA,EAAI,YACH,UAACA,EAAA,OAAS,YACR,SAACA,EAAA,QAAU,WACT,oBAEF,SAACA,EAAA,OAAS,WACR,wBAGJ,SAACA,EAAA,SAAW,WACV,SAACA,EAAA,OAAS,WACR,wBAXKV,IAeX,mBACA,sBAGL,IAEoBW,EAAM,0CACvB,WAAYC,GAAQ,IAAD,EAe4B,OAf5B,gBACf,cAAMA,IA0CVC,aAAe,YACX5D,EAAAA,EAAAA,IAAI,WAAY,MAAO,CAAE,GACxBe,MAAK,SAACC,GAEH,GADAM,QAAQC,IAAI,WAAYP,GACL,UAAfA,EAAIK,OASR,GAJmB,UAAfL,EAAIK,QACJ,EAAKwC,gBAAe,GAGnBC,MAAMC,QAAQ/C,EAAIP,MAAvB,CAKA,IAAMuD,EAAShD,EAAIP,KACnB,EAAKwD,eAAeD,EAHpB,MAFI,EAAKC,eAAe,GAM5B,IAAG/C,OAAM,SAACC,GAAG,OAAKG,QAAQC,IAAIJ,EAAI,GACtC,EAAC,EA8BD8C,eAAiB,SAACD,GACd,EAAKE,SAAS9B,OAAO+B,OAAO,EAAKC,MAAO,CACpCJ,OAAQA,IAEhB,EA/FI,EAAKI,MAAQ,CACTC,SAAU,CACNC,OAAQ,GACRnE,KAAM,IAGVoE,YAAY,EACZP,OAAQ,GACRQ,cAAe,IAAIC,KAGvB,EAAKC,YAAc,EAAKA,YAAYC,MAAK,WACzC,EAAKC,UAAY,EAAKA,UAAUD,MAAK,WAAM,CAC/C,CAsNC,OAtNA,yCAED,WAAqB,IAAD,OAChBE,KAAKjB,eAEM,IAAIkB,iBAAiB,gBAC7BC,UAAY,SAACC,GACRA,EAAQvE,KAAKwE,UACb,EAAKrB,cAEb,CACJ,GAAC,uBAED,SAAUsB,GAAQ,IAAD,OACbA,EAAMC,kBAENnF,EAAAA,EAAAA,IAAI,kBAAmB,OAAO,KAAK6E,KAAKT,MAAMC,WAAWtD,MAAK,SAACK,GAC7DE,QAAQC,IAAIH,GACc,OAApBA,EAASC,QACT,EAAKuC,cAKb,IAAG1C,OAAM,SAACC,GAAG,OAAKG,QAAQC,IAAIJ,EAAI,GACtC,GAAC,8BAyBA,SAAiBiE,EAASF,GACvBA,EAAMC,iBACFN,KAAKT,MAAMI,cAAca,IAAID,KAC7BpF,EAAAA,EAAAA,IAAI,YAAD,OAAaoF,EAAO,YAAY,OAAQ,CAAEE,KAAMT,KAAKT,MAAMI,cAAce,IAAIH,KAC/ErE,MAAK,SAACC,IACHhB,EAAAA,EAAAA,IAAI,YAAcoF,EAAS,MAAO,CAAC,GAAGrE,MAAK,SAACC,GAAG,OAAKM,QAAQC,IAAIP,EAAI,IAAEE,OAAM,SAACC,GAAG,OAAKG,QAAQC,IAAIJ,EAAI,IASrGG,QAAQC,IAAI,4BAA6BP,EAC7C,IAAGE,OAAM,SAACC,GAAG,OAAKG,QAAQC,IAAIJ,EAAI,GAE1C,GAAC,4BAGD,SAAeoD,GACX,IAAMiB,EAAiBpD,OAAO+B,OAAOU,KAAKT,MAAO,CAC7CG,WAAYA,IAGhBM,KAAKX,SAASsB,EAClB,GAAC,yBAQD,SAAYN,GACRL,KAAKX,UAAS,SAACuB,GACX,OAAO,OACAA,GAAS,IACZpB,SAAS,OACFoB,EAAUpB,UAAQ,cACpBa,EAAMpC,OAAO4C,GAAKR,EAAMpC,OAAO6C,SAG5C,GACJ,GAAC,6BAED,SAAgBP,EAASF,GACrBL,KAAKX,UAAS,SAAAuB,GACV,OAAO,OACAA,GAAS,IACZjB,cAAeiB,EAAUjB,cAAcoB,IAAIR,EAASF,EAAMpC,OAAO6C,QAEzE,GACJ,GAAC,+BAED,SAAkBP,GACd,OAAOP,KAAKT,MAAMI,cAAca,IAAID,GAAWP,KAAKT,MAAMI,cAAce,IAAIH,GAAU,EAC1F,GAAC,oBAGD,WAAU,IAAD,OACL,IAA8B,IAA1BP,KAAKT,MAAMG,WACX,OACI,UAACsB,EAAA,EAAS,YACN,mBACI,UAACpC,EAAA,OAAS,YACN,wBAAI,4BACJ,yBAAG,wBAAoB,0BAAM,mBAAU,SAAC,KAAI,CAACqC,GAAG,UAAS,SAAC,qBAM9E,IAAI9B,EAASR,EA2Db,OAzDIqB,KAAKT,MAAMJ,OAAOf,SACpBe,EAASa,KAAKT,MAAMJ,OAAO+B,KAAI,SAACC,EAAOC,GACrC,OAEI,4BACA,UAACxC,EAAA,EAAI,YACD,SAACA,EAAA,OAAS,WACV,wBAAYyC,UAAU,kBAAiB,WACvC,yBACK,IACIF,EAAM7F,KACV,QAEL,oBAAQ+F,UAAU,oBAAmB,UAAC,sBAChB,iBAAMC,MAAM,eAAc,SAAEH,EAAM1B,kBAIxD,SAACb,EAAA,SAAW,WACR,SAACA,EAAA,OAAS,WACN,SAAC2C,EAAA,EAAI,CAACC,SAAU,SAACnB,GAAK,OAAK,EAAKoB,iBAAiBN,EAAMO,OAAQrB,EAAM,EAAC,UAClE,UAACkB,EAAA,MAAQ,CAACF,UAAU,qBAAoB,WACpC,UAACM,EAAA,EAAG,CAACA,KAAG,EAACC,GAAI,EAAE,WACX,SAACL,EAAA,QAAU,CAACM,QAAQ,kBAAkBC,QAAM,WAAC,aAG7C,SAACP,EAAA,UAAY,CACTF,UAAU,OACVR,GAAG,kBACHkB,YAAY,aACZjB,MAAO,EAAKkB,kBAAkBb,EAAMO,QACpCO,SAAU,SAAC5B,GAAK,OAAK,EAAK6B,gBAAgBf,EAAMO,OAAQrB,EAAM,QAGtE,UAACsB,EAAA,EAAG,CAACC,GAAG,OAAM,WACV,SAACO,EAAA,EAAM,CAACC,KAAK,SAASC,QAAQ,OAAOhB,UAAU,OAAOiB,KAAK,KAAI,SAAC,UAGhE,SAAC,KAAI,CAACrB,GAAI,IAAME,EAAMO,OAAO,UACzB,gBAAKL,UAAU,cAAa,SAAC,2BAUzD,mBACA,oBA9CUF,EAAMO,OAkDtB,MAIE,SAACa,EAAA,EAAM,CAAC7C,WAAYM,KAAKT,MAAMG,WAAW,UACtC,iBAAK2B,UAAU,eAAc,WAC7B,SAACM,EAAA,EAAG,CAACa,GAAI,CAAEC,KAAM,EAAGC,OAAQ,GAAI,UAChC,UAAC9D,EAAA,OAAS,YACF,UAACA,EAAA,QAAU,YACP,uBAAG,sBACH,iBAAMrD,KAAK,MAAM,aAAW,gBAAe,SAAC,uBAEhD,SAACqD,EAAA,OAAS,WACN,UAAC2C,EAAA,EAAI,CAACC,SAAUxB,KAAKD,UAAU,WAC3B,UAACwB,EAAA,QAAU,CAACoB,UAAU,SAAQ,WAC1B,SAACpB,EAAA,QAAU,UAAC,eACZ,SAACA,EAAA,UAAY,CAACa,KAAK,OAAOtB,MAAOd,KAAKT,MAAMC,SAASC,OAAQwC,SAAUjC,KAAKH,kBAEhF,UAAC0B,EAAA,QAAU,CAACoB,UAAU,OAAM,WACxB,SAACpB,EAAA,QAAU,UAAC,YACZ,SAACA,EAAA,UAAY,CAACqB,GAAG,WAAWC,KAAM,EAAG/B,MAAOd,KAAKT,MAAMC,SAASlE,KAAM2G,SAAUjC,KAAKH,kBAEzF,SAAC0B,EAAA,QAAU,WACP,SAACY,EAAA,EAAM,CAACC,KAAK,SAASC,QAAQ,OAAOC,KAAK,KAAI,SAAC,sBAMnE,SAACtB,EAAA,EAAS,UACT7B,QAKb,KAAC,EAvOsB,CAAS2D,EAAAA,U,0MC3BvBC,GAAQ,QAIjB,WAAYtC,EAAMuC,IAAO,oBAHzBvC,KAAO,GAAG,KACVuC,KAAO,GAGHhD,KAAKS,KAAOA,EACZT,KAAKgD,KAAOA,CAChB,IAGiBC,EAAI,0CACrB,WAAYnE,GAAQ,IAAD,EAKd,OALc,gBACf,cAAMA,IAEDS,MAAQ,CACT2D,MAAO,IACV,CACL,CAyBC,OAzBA,8BAED,WACI,OACI,0BACI,SAACC,EAAA,EAAM,CAACC,GAAG,QAAQf,QAAQ,QAAQgB,MAAM,MAAK,UAC1C,UAACrC,EAAA,EAAS,YACN,SAACmC,EAAA,QAAY,UAAE,QACf,SAACG,EAAA,EAAG,CAACjC,UAAU,UAAS,UACxB,SAAC,KAAU,UAEHrB,KAAKlB,MAAMoE,MAAMhC,KAAI,SAAAqC,GACjB,OACI,SAAC,KAAI,CAACtC,GAAIsC,EAAKP,KAAK,SACfO,EAAK9C,MAGlB,cAQ5B,KAAC,EAhCoB,CAASqC,EAAAA,WCZbU,EAAQ,0CAC1B,WAAY1E,GAAQ,IAAD,EAKd,OALc,gBACf,cAAMA,IAEDS,MAAQ,CACThE,KAAM,IACT,CACJ,CA0BC,OA1BA,8BAED,WACI,IAAI2H,EAAQ,GAEZ,OAAQlD,KAAKlB,MAAMvD,MACf,IAAK,UAAY2H,EAAQlD,KAAKyD,mBAAoB,MAClD,IAAK,UAAYP,EAAQlD,KAAK0D,gBAGlC,OAAO,SAAC,EAAI,CAACR,MAAOA,GACxB,GAAC,8BAED,WACI,MAAO,CACH,IAAIH,EAAS,OAAQ,KACrB,IAAIA,EAAS,UAAW,WACxB,IAAIA,EAAS,WAAY,aAEjC,GAAC,2BAED,WACI,MAAO,CACH,IAAIA,EAAS,SAAU,WACvB,IAAIA,EAAS,WAAY,YAEjC,KAAC,EAjCwB,CAASD,EAAAA,WCahCa,EAAa,CACjBC,SAAU,QACVC,KAAM,EACNC,OAAQ,EACRC,MAAO,OACPC,OAAQ,KACRC,OAAQ,EACRC,UAAW,UA4Cb,EAzCe,SAACpF,GACd,OAAkCqF,EAAAA,EAAAA,WAAS,GAAM,eAA1CC,EAAS,KAAEC,EAAY,MAE9BC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,WACfC,OAAOJ,WAAY,EACnBC,GAAa,EACf,EAEMI,EAAY,WAChBD,OAAOJ,WAAY,EACnBC,GAAa,EACf,EAKA,OAHAG,OAAOE,iBAAiB,SAAUH,GAClCC,OAAOE,iBAAiB,UAAWD,GAE5B,WACLD,OAAOG,oBAAoB,SAAUJ,GACrCC,OAAOG,oBAAoB,UAAWF,EACxC,CACF,KAEAH,EAAAA,EAAAA,YAAU,WACJE,OAAOJ,WACTC,GAAa,EAEjB,GAAG,IAEH,IA7CoB3E,EAAYkF,EA6C1BC,GA7CcnF,EA6CQZ,EAAMY,WA7CFkF,EA6Cc9F,EAAM8F,gBA3ClD,SAACpB,EAAQ,CAACjI,KAAMmE,EAAa,UAAY,UAAWkF,eAAgBA,KA6CtE,OACE,2BACGC,EACCT,GAAY,SAACU,EAAA,EAAK,CAACzC,QAAQ,UAAU0C,MAAOpB,EAAW,SAAC,iBAAuB,MACjF,kBACC7E,EAAMkG,WAGb,C","sources":["api/api.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Quotes.js","components/Menu.js","components/RoleMenu.js","hoc/Layout/Layout.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport default function api(path, method, body, role=\"allowed\") {\r\n    return new Promise((resolve) => {\r\n        const requestData = {\r\n            method: method,\r\n            url: \"https://service-forum.herokuapp.com/\" + path,\r\n            data: JSON.stringify(body),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": getToken(role),\r\n            },\r\n        };\r\n\r\n        axios(requestData)\r\n        .then(res => responseHandler(res, resolve))\r\n        .catch(async err => {\r\n\r\n            if (err.response && err.response.status === 401) {\r\n                const response = {\r\n                    status: \"login\",\r\n                    data: null\r\n                };\r\n                console.log(response);\r\n                return resolve(response);\r\n            }\r\n           \r\n            const response = {\r\n                status: \"error\",\r\n                data: err\r\n            };\r\n\r\n            resolve(response);\r\n\r\n        });\r\n    });\r\n}\r\n\r\nasync function responseHandler(res, resolve) {\r\n    console.log(res);\r\n    if (res.status < 200 || res.status >= 300) {\r\n        const response = {\r\n            status:'error',\r\n            data: res.data,\r\n        };\r\n\r\n        return resolve(response);\r\n    }\r\n\r\n    const response = {\r\n        status: \"ok\",\r\n        data: res.data,\r\n    };\r\n\r\n    return resolve(response);\r\n}\r\n\r\nfunction getToken(role) {\r\n    const token = localStorage.getItem(\"token_\" + role);\r\n    return \"Bearer \" + token;\r\n}\r\n\r\nexport function tokenExists(role) {\r\n    const token = localStorage.getItem(\"token_\" + role);\r\n    if (token) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nexport function saveToken(role, token) {\r\n    localStorage.setItem(\"token_\" + role, token);\r\n}\r\n\r\nexport function removeToken(role) {\r\n    localStorage.removeItem(\"token_\" + role);\r\n}\r\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import React from 'react';\r\nimport '../css/Quotes.css';\r\nimport { Col, Card, Container, Form, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../api/api';\r\nimport Layout from '../hoc/Layout/Layout';\r\n\r\nconst emptyCards = [];\r\nfor (let i = 0; i < 5; i++) {\r\n  emptyCards.push((\r\n    <div>\r\n      <Card key={i}>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            <p></p>\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <br />\r\n          </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          <Card.Text>\r\n            <br />\r\n          </Card.Text>\r\n        </Card.Footer>\r\n      </Card>\r\n      <br />\r\n      <br />\r\n    </div>\r\n  ));\r\n}\r\n\r\nexport default class Quotes extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            newQuote: {\r\n                author: \"\",\r\n                body: \"\",\r\n            },\r\n\r\n            isLoggedIn: true,\r\n            quotes: [],\r\n            quotesComment: new Map()\r\n        }\r\n\r\n        this.setNewQuote = this.setNewQuote.bind(this);\r\n        this.postQuote = this.postQuote.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllQuotes();\r\n\r\n        const bc = new BroadcastChannel('sync-channel');\r\n        bc.onmessage = (message) => {\r\n            if (message.data.finished) {\r\n                this.getAllQuotes();\r\n            }\r\n        }\r\n    }\r\n\r\n    postQuote(event) {\r\n        event.preventDefault();\r\n\r\n        api(\"api/post/create\", \"post\", {...this.state.newQuote}).then((response) => {\r\n          console.log(response);\r\n            if (response.status === \"ok\") {\r\n                this.getAllQuotes();\r\n                //this.setState({\r\n                //  quotes: [ ...this.state.quotes, response.data ],\r\n                //});\r\n            }\r\n        }).catch((err) => console.log(err));\r\n    }\r\n\r\n    getAllQuotes = () => {\r\n        api(\"api/post\", \"get\", { } )\r\n        .then((res) => {\r\n            console.log('response', res);\r\n            if (res.status === \"error\") {\r\n                //this.setLogginState(false);\r\n                return;\r\n            }\r\n\r\n            if (res.status === \"login\") {\r\n                this.setLogginState(false);\r\n            }\r\n\r\n            if (!Array.isArray(res.data)) {\r\n                this.setQuotesState([]);\r\n                return;\r\n            }\r\n\r\n            const quotes = res.data;\r\n            this.setQuotesState(quotes);\r\n        }).catch((err) => console.log(err));\r\n    }\r\n    \r\n     postQuoteComment(quoteId, event) {\r\n        event.preventDefault();\r\n        if (this.state.quotesComment.has(quoteId)) {\r\n            api(`api/post/${quoteId}/comment`, \"post\", { text: this.state.quotesComment.get(quoteId) })\r\n            .then((res)=> {\r\n                api(\"api/post/\" + quoteId, \"get\", {}).then((res) => console.log(res)).catch((err) => console.log(err));\r\n                /*\r\n                this.setState(prevState => {\r\n                    return {\r\n                        ...prevState,\r\n                        quotesComment: prevState.quotesComment.set(quoteId, \"\")\r\n                    }\r\n                })\r\n                */\r\n                console.log(\"returned comment from api\", res);\r\n            }).catch((err) => console.log(err));\r\n        }\r\n    }\r\n    \r\n\r\n    setLogginState(isLoggedIn) {\r\n        const newLogginState = Object.assign(this.state, {\r\n            isLoggedIn: isLoggedIn,\r\n        });\r\n\r\n        this.setState(newLogginState);\r\n    }\r\n\r\n    setQuotesState = (quotes) => {\r\n        this.setState(Object.assign(this.state, {\r\n            quotes: quotes,\r\n        }));\r\n    }\r\n\r\n    setNewQuote(event) {\r\n        this.setState((prevState) => {\r\n            return {\r\n                ...prevState,\r\n                newQuote: {\r\n                    ...prevState.newQuote,\r\n                    [event.target.id]: event.target.value\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    setQuoteComment(quoteId, event) {\r\n        this.setState(prevState => {\r\n            return {\r\n                ...prevState,\r\n                quotesComment: prevState.quotesComment.set(quoteId, event.target.value)\r\n            }\r\n        })\r\n    }\r\n\r\n    getIniitalComment(quoteId) {\r\n        return this.state.quotesComment.has(quoteId) ? this.state.quotesComment.get(quoteId): \"\";\r\n    } \r\n\r\n\r\n    render() {\r\n        if (this.state.isLoggedIn === false) {\r\n            return(\r\n                <Container>\r\n                    <br />\r\n                        <Card.Text>\r\n                            <h3>You are not signed in!</h3>\r\n                            <p>Please, go back and <span>👉 </span><Link to='/signin'>sign in</Link></p>\r\n                        </Card.Text>\r\n                </Container>\r\n            );\r\n        }\r\n\r\n        let quotes = emptyCards;\r\n\r\n        if (this.state.quotes.length) {\r\n          quotes = this.state.quotes.map((quote, index) => {\r\n            return (\r\n                // --- div\r\n                <div key={quote.postId}>    \r\n                <Card>\r\n                    <Card.Body>\r\n                    <blockquote className=\"blockquote mb-0\">\r\n                    <p>\r\n                        {' '}\r\n                            {quote.body}\r\n                        {' '}\r\n                    </p>\r\n                    <footer className=\"blockquote-footer\">\r\n                        Someone famous in <cite title=\"Source Title\">{quote.author}</cite>\r\n                    </footer>\r\n                    </blockquote>\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <Card.Text>\r\n                            <Form onSubmit={(event) => this.postQuoteComment(quote.postId, event)}>\r\n                                <Form.Row className=\"align-items-center\">\r\n                                    <Col Col xs={7}>\r\n                                        <Form.Label htmlFor=\"inlineFormInput\" srOnly>\r\n                                            Comment\r\n                                        </Form.Label>\r\n                                        <Form.Control\r\n                                            className=\"mb-2\"\r\n                                            id=\"inlineFormInput\"\r\n                                            placeholder=\"Comment...\"\r\n                                            value={this.getIniitalComment(quote.postId)}\r\n                                            onChange={(event) => this.setQuoteComment(quote.postId, event)}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col xs=\"auto\">\r\n                                        <Button type=\"submit\" variant=\"dark\" className=\"mb-2\" size=\"sm\">\r\n                                            Post\r\n                                        </Button>\r\n                                        <Link to={\"/\" + quote.postId} >\r\n                                            <div className=\"link-params\">\r\n                                                Open\r\n                                            </div>\r\n                                        </Link>\r\n                                    </Col>\r\n                                </Form.Row>\r\n                            </Form>\r\n                        </Card.Text>\r\n                    </Card.Footer>\r\n                </Card>\r\n                <br />\r\n                <br />\r\n                </div>\r\n                \r\n            );\r\n          });\r\n        }\r\n\r\n        return(\r\n            <Layout isLoggedIn={this.state.isLoggedIn}>\r\n                <div className=\"quotes-input\">\r\n                <Col md={{ span: 6, offset: 3 }}>\r\n                <Card.Body>\r\n                        <Card.Title>\r\n                            <p>Quotes goes here</p>\r\n                            <span role=\"img\" aria-label=\"pointing_down\"> 👇 </span>\r\n                        </Card.Title>\r\n                        <Card.Text>\r\n                            <Form onSubmit={this.postQuote}>\r\n                                <Form.Group controlId=\"author\">\r\n                                    <Form.Label> Author: </Form.Label>\r\n                                    <Form.Control type=\"text\" value={this.state.newQuote.author} onChange={this.setNewQuote} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"body\">\r\n                                    <Form.Label>Quote:</Form.Label>\r\n                                    <Form.Control as=\"textarea\" rows={3} value={this.state.newQuote.body} onChange={this.setNewQuote}/>\r\n                                </Form.Group>\r\n                                <Form.Group>\r\n                                    <Button type=\"submit\" variant=\"dark\" size=\"sm\">Post</Button>\r\n                                </Form.Group>\r\n                            </Form>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Col>\r\n                <Container>\r\n                {quotes}\r\n                </Container>\r\n                </div>\r\n          </Layout>\r\n        );\r\n    }\r\n}\r\n\r\n/*\r\n\r\n    <Card.Title>\r\n        <p>Author: {quote.author}</p>\r\n    </Card.Title>\r\n    <Link to={\"/\" + quote.postId} >\r\n    <Card.Text>\r\n        Quote: {quote.body}\r\n    </Card.Text>\r\n    </Link>\r\n\r\n\r\n    <div className=\"quotes\">\r\n*/ \r\n\r\n/*  `quote_${index}`  */\r\n","import React from 'react';\r\nimport { Navbar, Container, Nav } from 'react-bootstrap';\r\nimport { HashRouter, Link } from 'react-router-dom';\r\nimport '../css/Menu.css';\r\n\r\nexport class MenuItem {\r\n    text = \"\";\r\n    link = \"\";\r\n\r\n    constructor(text, link) {\r\n        this.text = text;\r\n        this.link = link;\r\n    }\r\n}\r\n\r\nexport default class Menu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar bg=\"light\" variant=\"light\" fixed=\"top\">\r\n                    <Container>\r\n                        <Navbar.Brand >QR</Navbar.Brand>\r\n                        <Nav className=\"mr-auto\">\r\n                        <HashRouter>\r\n                            {\r\n                                this.props.items.map(item =>{\r\n                                    return(\r\n                                        <Link to={item.link}>\r\n                                            {item.text}\r\n                                        </Link>\r\n                                    );\r\n                                })\r\n                            }\r\n                        </HashRouter>\r\n                        </Nav>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Menu, { MenuItem } from './Menu.js';\r\n\r\nexport default class RoleMenu extends React.Component {\r\n   constructor(props) {\r\n       super(props);\r\n\r\n       this.state = {\r\n           role: \"\",\r\n       }\r\n    }\r\n\r\n    render() {\r\n        let items = [];\r\n\r\n        switch (this.props.role) {\r\n            case \"visitor\" : items = this.visitorMenuItems(); break;\r\n            case \"allowed\" : items = this.userMenuItems();    break;\r\n        }\r\n\r\n        return <Menu items={items} />\r\n    }\r\n\r\n    visitorMenuItems() {\r\n        return [\r\n            new MenuItem(\"Home\", \"/\"),\r\n            new MenuItem(\"Sign In\", \"/signin\"),\r\n            new MenuItem(\"Register\", \"/register\")\r\n        ];\r\n    }\r\n\r\n    userMenuItems() {\r\n        return [\r\n            new MenuItem(\"Quotes\", \"/quotes\"),\r\n            new MenuItem(\"Sign Out\", \"/signout\")\r\n        ];\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport 'jquery/dist/jquery.min.js'\r\nimport 'popper.js';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nimport RoleMenu from '../../components/RoleMenu';\r\n\r\nconst createHeader = (isLoggedIn, showBackButton) => {\r\n  return (\r\n    <RoleMenu role={isLoggedIn ? 'allowed' : 'visitor'} showBackButton={showBackButton} />\r\n  );\r\n}\r\n\r\nconst alertStyle = {\r\n  position: 'fixed',\r\n  left: 0,\r\n  bottom: 0,\r\n  width: '100%',\r\n  zIndex: 9999,\r\n  margin: 0,\r\n  textAlign: 'center'\r\n}\r\n\r\nconst Layout = (props) => {\r\n  const [isOffline, setIsOffline] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const goOnline = () => {\r\n      window.isOffline = false;\r\n      setIsOffline(false);\r\n    }\r\n\r\n    const goOffline = () => {\r\n      window.isOffline = true;\r\n      setIsOffline(true);\r\n    }\r\n\r\n    window.addEventListener('online', goOnline);\r\n    window.addEventListener('offline', goOffline);\r\n\r\n    return () => {\r\n      window.removeEventListener('online', goOnline);\r\n      window.removeEventListener('offline', goOffline);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (window.isOffline) {\r\n      setIsOffline(true);\r\n    }\r\n  }, []);\r\n\r\n  const header = createHeader(props.isLoggedIn, props.showBackButton);\r\n\r\n  return (\r\n    <div>\r\n      {header}\r\n      { isOffline ? <Alert variant=\"warning\" style={alertStyle}>Offline mode</Alert> : null }\r\n      <br />\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n"],"names":["api","path","method","body","role","Promise","resolve","requestData","url","data","JSON","stringify","headers","getToken","axios","then","res","responseHandler","catch","err","response","status","console","log","localStorage","getItem","tokenExists","saveToken","token","setItem","removeToken","removeItem","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","emptyCards","Card","Quotes","props","getAllQuotes","setLogginState","Array","isArray","quotes","setQuotesState","setState","assign","state","newQuote","author","isLoggedIn","quotesComment","Map","setNewQuote","bind","postQuote","this","BroadcastChannel","onmessage","message","finished","event","preventDefault","quoteId","has","text","get","newLogginState","prevState","id","value","set","Container","to","map","quote","index","className","title","Form","onSubmit","postQuoteComment","postId","Col","xs","htmlFor","srOnly","placeholder","getIniitalComment","onChange","setQuoteComment","Button","type","variant","size","Layout","md","span","offset","controlId","as","rows","React","MenuItem","link","Menu","items","Navbar","bg","fixed","Nav","item","RoleMenu","visitorMenuItems","userMenuItems","alertStyle","position","left","bottom","width","zIndex","margin","textAlign","useState","isOffline","setIsOffline","useEffect","goOnline","window","goOffline","addEventListener","removeEventListener","showBackButton","header","Alert","style","children"],"sourceRoot":""}